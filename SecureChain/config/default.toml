# BugForgeX Default Configuration
# This file contains the default configuration settings for BugForgeX.
# Copy this file to ~/.config/bugforgex/config.toml to customize settings.

[general]
# Logging level: trace, debug, info, warn, error
log_level = "info"

# Maximum number of concurrent analysis tasks
max_concurrent_tasks = 4

# Default output directory for analysis results
output_dir = "./output"

# Cache directory for downloaded contracts and analysis results
cache_dir = "~/.cache/bugforgex"

# Enable colored terminal output
colored_output = true

# Default timeout for operations (seconds)
default_timeout = 300

[ai]
# AI backend to use: local, openai, anthropic
backend = "local"

# Enable AI-powered analysis by default
enabled_by_default = false

# Maximum tokens for AI requests
max_tokens = 4000

# Temperature for AI responses (0.0 = deterministic, 2.0 = very creative)
temperature = 0.1

[ai.openai]
# OpenAI API configuration
api_url = "https://api.openai.com/v1"
model = "gpt-4"
organization = ""  # Optional: OpenAI organization ID
rate_limit = 60    # Requests per minute

[ai.anthropic]
# Anthropic Claude configuration
api_url = "https://api.anthropic.com/v1"
model = "claude-3-sonnet-20240229"
rate_limit = 60    # Requests per minute

[ai.local]
# Local LLM configuration (Ollama)
ollama_url = "http://localhost:11434"
default_model = "codellama:7b"
available_models = [
    "codellama:7b",
    "codellama:13b",
    "mistral:7b",
    "llama2:7b",
    "deepseek-coder:6.7b"
]
gpu_acceleration = true

[networks.ethereum]
# Ethereum network configuration
explorer_url = "https://api.etherscan.io/api"
rpc_url = "https://mainnet.infura.io/v3/YOUR_PROJECT_ID"
rate_limit = 5     # Requests per second
timeout = 30       # Request timeout in seconds

[networks.polygon]
# Polygon network configuration
explorer_url = "https://api.polygonscan.com/api"
rpc_url = "https://polygon-mainnet.infura.io/v3/YOUR_PROJECT_ID"
rate_limit = 5
timeout = 30

[networks.arbitrum]
# Arbitrum network configuration
explorer_url = "https://api.arbiscan.io/api"
rpc_url = "https://arbitrum-mainnet.infura.io/v3/YOUR_PROJECT_ID"
rate_limit = 5
timeout = 30

[networks.optimism]
# Optimism network configuration
explorer_url = "https://api-optimistic.etherscan.io/api"
rpc_url = "https://optimism-mainnet.infura.io/v3/YOUR_PROJECT_ID"
rate_limit = 5
timeout = 30

[networks.bsc]
# Binance Smart Chain configuration
explorer_url = "https://api.bscscan.com/api"
rpc_url = "https://bsc-dataseed.binance.org"
rate_limit = 5
timeout = 30

[networks.solana]
# Solana network configuration
rpc_url = "https://api.mainnet-beta.solana.com"
explorer_url = "https://explorer.solana.com"
rate_limit = 10
timeout = 30

[networks.github]
# GitHub API configuration
api_url = "https://api.github.com"
rate_limit = 5000  # Requests per hour (authenticated)
timeout = 30

[tools.slither]
# Slither static analyzer configuration
executable = "slither"
args = ["--json", "-"]
exclude_detectors = []  # List of detectors to exclude
include_detectors = []  # List of detectors to include (empty = all)
timeout = 300          # Analysis timeout in seconds

[tools.mythril]
# Mythril symbolic execution configuration
executable = "myth"
args = ["analyze", "--output", "json"]
timeout = 600          # Analysis timeout in seconds
max_depth = 22         # Maximum transaction depth
solver_timeout = 10000 # Z3 solver timeout in milliseconds

[tools.echidna]
# Echidna property-based fuzzing configuration
executable = "echidna-test"
test_limit = 10000     # Number of test cases to generate
seq_len = 100          # Maximum sequence length
shrink_limit = 5000    # Number of shrinking attempts
timeout = 600          # Fuzzing timeout in seconds

[analysis]
# Default analysis depth: basic, standard, deep
default_depth = "standard"

# Enable parallel analysis across multiple contracts
parallel_analysis = true

# Maximum number of analysis threads
max_threads = 4

# Cache analysis results to avoid re-analyzing unchanged contracts
cache_results = true

# Cache time-to-live in seconds (1 hour)
cache_ttl = 3600

# Minimum confidence threshold for reporting vulnerabilities (0.0 to 1.0)
min_confidence = 0.5

# Vulnerability severity levels to include in reports
severity_filters = ["Critical", "High", "Medium", "Low"]

[reporting]
# Default report format: console, markdown, html, json, pdf
default_format = "markdown"

# Include executive summary in reports by default
include_summary = true

# Directory containing custom report templates
template_dir = "./templates"

# Maximum report size in MB
max_report_size = 100

# Custom report templates (template_name = "path/to/template.hbs")
[reporting.custom_templates]
# executive = "templates/executive_summary.hbs"
# technical = "templates/technical_report.hbs"

[plugins]
# Plugin-specific configurations

[plugins.evm]
# EVM plugin configuration
enabled = true
check_upgradeable_patterns = true
check_proxy_patterns = true
analyze_assembly = true

[plugins.move]
# Move language plugin configuration
enabled = true
check_resource_safety = true
check_capability_patterns = true
formal_verification = false

[plugins.cairo]
# Cairo plugin configuration
enabled = true
check_felt_operations = true
check_storage_vars = true
protostar_integration = true

[plugins.ink]
# Ink! plugin configuration
enabled = true
check_storage_patterns = true
check_message_patterns = true
substrate_integration = true

# Environment variable mappings
# These settings can be overridden by environment variables
[env_vars]
openai_api_key = "OPENAI_API_KEY"
anthropic_api_key = "ANTHROPIC_API_KEY"
etherscan_api_key = "ETHERSCAN_API_KEY"
polygonscan_api_key = "POLYGONSCAN_API_KEY"
arbiscan_api_key = "ARBISCAN_API_KEY"
optimism_api_key = "OPTIMISM_API_KEY"
bscscan_api_key = "BSCSCAN_API_KEY"
github_token = "GITHUB_TOKEN"
ollama_url = "OLLAMA_URL"
log_level = "BUGFORGEX_LOG_LEVEL"
output_dir = "BUGFORGEX_OUTPUT_DIR"

# Performance tuning
[performance]
# Memory limit for analysis processes (MB)
memory_limit = 2048

# Enable memory usage optimization
memory_optimization = true

# Garbage collection frequency (analysis cycles)
gc_frequency = 100

# Disk cache size limit (MB)
disk_cache_limit = 1024

# Network request retry settings
[network]
max_retries = 3
retry_delay = 1000     # Milliseconds
backoff_multiplier = 2.0
max_retry_delay = 30000  # Milliseconds

# Security settings
[security]
# Enable sandboxed execution for analysis tools
sandboxed_execution = true

# Validate downloaded contracts before analysis
validate_contracts = true

# Maximum file size for analysis (MB)
max_file_size = 50

# Allowed file extensions for analysis
allowed_extensions = [".sol", ".move", ".cairo", ".rs"]

# Logging configuration
[logging]
# Log file path (empty = stdout only)
log_file = ""

# Maximum log file size (MB)
max_log_size = 100

# Number of log files to retain
log_retention = 5

# Log format: json, text
log_format = "text"

# Include source location in logs
include_source = false

# Feature flags for experimental features
[features]
# Enable experimental AI models
experimental_ai = false

# Enable beta blockchain support
beta_chains = false

# Enable advanced fuzzing techniques
advanced_fuzzing = false

# Enable formal verification integration
formal_verification = false

# Enable interactive analysis mode
interactive_mode = false
